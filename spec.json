{
  "nio/XBeeATCommand": {
    "version": "0.1.0",
    "description": "Send AT commands to a local XBee",
    "categories": [
      "Communication",
      "Hardware"
    ],
    "properties": {
      "baud_rate": {
        "title": "Baud Rate",
        "type": "IntType",
        "description": "BAUD rate to communicate with the serial port.",
        "default": 9600
      },
      "command": {
        "title": "AT Command (ascii)",
        "type": "Type",
        "description": "The command to execute, ex. `D0`, `WR`.",
        "default": "ID"
      },
      "digimesh": {
        "title": "DigiMesh",
        "type": "BoolType",
        "description": "Use DigiMesh protocol rather than XBee (IEEE 802.15.4).",
        "default": false
      },
      "escaped": {
        "title": "Escaped characters? (API mode 2)",
        "type": "BoolType",
        "description": "True uses API mode 2.",
        "default": true
      },
      "parameter": {
        "title": "Command Parameter (hex, ex: \"05\")",
        "type": "Type",
        "description": "The command parameter, ex. `05` for `D0` command to set pin high.",
        "default": ""
      },
      "serial_port": {
        "title": "COM/Serial Port",
        "type": "StringType",
        "description": "COM/Serial port of XBee. From the computer terminal, view the available ports with `ls /dev/tty.*`. Ex. `/dev/tty.usbserial-DA013Y6Q`",
        "default": "/dev/ttyAMA0"
      }
    },
    "inputs": {
      "default": {
        "description": "Any list of signals."
      }
    },
    "outputs": {
      "default": {
        "description": "Notifies a signal for each frame read from XBee."
      }
    },
    "commands": {}
  },
  "nio/XBeeRemoteAT": {
    "version": "0.1.0",
    "description": "Send Remote AT commands to a destination XBee",
    "categories": [
      "Communication",
      "Hardware"
    ],
    "properties": {
      "baud_rate": {
        "title": "Baud Rate",
        "type": "IntType",
        "description": "BAUD rate to communicate with the serial port.",
        "default": 9600
      },
      "command": {
        "title": "AT Command (ascii)",
        "type": "Type",
        "description": "The command to execute, ex. `D0`, `WR`.",
        "default": "ID"
      },
      "dest_addr": {
        "title": "Destination Address (2 or 8 bytes hex, ex: \"00 05\")",
        "type": "Type",
        "description": "2 byte address of remote XBee to send AT command too. Default value when left blank is `FF FF` which sends a broadcast.",
        "default": ""
      },
      "digimesh": {
        "title": "DigiMesh",
        "type": "BoolType",
        "description": "Use DigiMesh protocol rather than XBee (IEEE 802.15.4).",
        "default": false
      },
      "escaped": {
        "title": "Escaped characters? (API mode 2)",
        "type": "BoolType",
        "description": "True uses API mode 2.",
        "default": true
      },
      "parameter": {
        "title": "Command Parameter (hex, ex: \"05\")",
        "type": "Type",
        "description": "The command parameter, ex. `05` for `D0` command to set pin high.",
        "default": ""
      },
      "serial_port": {
        "title": "COM/Serial Port",
        "type": "StringType",
        "description": "COM/Serial port of XBee. From the computer terminal, view the available ports with `ls /dev/tty.*`. Ex. `/dev/tty.usbserial-DA013Y6Q`",
        "default": "/dev/ttyAMA0"
      }
    },
    "inputs": {
      "default": {
        "description": "Any list of signals."
      }
    },
    "outputs": {
      "default": {
        "description": "Notifies a signal for each frame read from XBee."
      }
    },
    "commands": {}
  },
  "nio/XBeeTX": {
    "version": "0.2.1",
    "description": "Transmit signal through XBee over serial. Input signals are serialized and transmitted to the destination XBee(s). Destination XBees notify a signal for each received transmission. Essentially, this block can be used to send signals from one nio instance to another.",
    "categories": [
      "Communication",
      "Hardware"
    ],
    "properties": {
      "baud_rate": {
        "title": "Baud Rate",
        "type": "IntType",
        "description": "BAUD rate to communicate with the serial port.",
        "default": 9600
      },
      "data": {
        "title": "Data",
        "type": "Type",
        "description": "Data to send through XBee",
        "default": "{{ $.to_dict() }}"
      },
      "dest_addr": {
        "title": "Destination Address (2 or 8 bytes hex, ex: \"00 05\")",
        "type": "Type",
        "description": "2 byte address of remote XBee to send AT command too. Default value when left blank is `FF FF` which sends a broadcast.",
        "default": ""
      },
      "digimesh": {
        "title": "DigiMesh",
        "type": "BoolType",
        "description": "Use DigiMesh protocol rather than XBee (IEEE 802.15.4).",
        "default": false
      },
      "escaped": {
        "title": "Escaped characters? (API mode 2)",
        "type": "BoolType",
        "description": "True uses API mode 2.",
        "default": true
      },
      "serial_port": {
        "title": "COM/Serial Port",
        "type": "StringType",
        "description": "COM/Serial port of XBee. From the computer terminal, view the available ports with `ls /dev/tty.*`. Ex. `/dev/tty.usbserial-DA013Y6Q`",
        "default": "/dev/ttyAMA0"
      }
    },
    "inputs": {
      "default": {
        "description": "Any list of signals."
      }
    },
    "outputs": {
      "default": {
        "description": "Notifies a signal for each frame read from XBee."
      }
    },
    "commands": {}
  }
}